import React from 'react'
import Square from '../components/Square'
import '../style/Cub.css'

function MyStack(props){

    return(
        <Square side={'back'} thems={props.thems}>
        <h2>мой стек</h2>
        <p>Себя позиционирую как разработчик клиентской части веб-приложений (front-end),
            поэтому конечо в мой стек входит: 
        </p>
        <p className='back__stack-names'>
           <span> HTML, CSS, JavaScript, React, Redux </span>
            и не совсем "фронтовские" <span>PostgreSQL, Node.js, Express</span>
        </p>
        <p>Хочу не много рассказать о том, как начинал изучать JS и почему выбор пал на React.</p>
        <p>Начиная изучать JS, 
           я решил сэкономить время и прошел курс по JS "для начинающих", от того самого
           альмоматра для вайтишников "learnJS". <br/>
           Тк разработка UI на основе отдельных компонентов — это будущее web-разработки, 
           плюс фреймворки и библиотеки экономят время при разработке, я принял решение это дело изучить,
           но как и любой другой начинающий front-end developer, встал перед выбором, что изучать первым.
           Написал один проект на Vue, другой на React и душа откликнулось в сторону библиотеке React, в добавок, 
           на мой взгляд, UI код в React читабельней и проще в сопровождении.</p>
        </Square>
    )
}

export default MyStack
/*
другой на React и душа откликнулось в сторону свободы
           предоставляемой React, 
P.S. Недавно у меня был спор, что JS
           код только интерпретируется, но мы то знаем, что он ещё и компилируется для оптимизации, при помощи 
           JIT(Just In Time) компиляции.
Написав n-ое колличество проектов на Vanila JS, я уже понимал, что нужно
           начинать притягивать к своим "hard skills", какой-нибудь фреймворк.
           (Начиная изучать JS, 
    я решил сэкономить время и прошел курс по JS "для начинающих", от того самого
    альмоматра для вайтишников "learnJS", понимаю что в JS обект является прородителем
    всех дугих сущностей (всех типов данных и структор, кроме примитивов) и так же, что JS
    код не только интерпретируется, но и компилируется для оптимизации при помощи 
    JIT(Just In Time) компиляции, и другое)*/
// HTML5 (семантическая и адаптивная верстка),
// CSS3 (flex, grid, понимаю специфику работы селекторов), JavaScript (Начиная изучать JS, 
// я решил сэкономить время и прошел курс по JS "для начинающих", от того самого
//  альмоматра для вайтишников "learnJS", понимаю что в JS обект является прородителем
//  всех дугих сущностей (всех типов данных и структор, кроме примитивов) и так же, что JS
//  код не только интерпретируется, но и компилируется для оптимизации при помощи 
//   JIT(Just In Time) компиляции, и другое), должен сказать,
//   что в начале я решил попробовать фреймворк Vue, даже написал на нем 
//    React (Reconciliantion (сверка), VDOM в
//    контексте реакта и др продвинутые темы),